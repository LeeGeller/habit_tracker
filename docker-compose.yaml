version: "3"

services:
  db:
    image: postgres
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  habit:
    build:
      context: .
    tty: true
    volumes:
      - .:/app
    restart: on-failure
    ports:
      - "8000:8000"
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis
    ports:
      - "6380:6379"  # У меня был занят 6380 порт
    restart: on-failure

  celery:
    build:
      context: .
    tty: true
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - habit
    env_file:
      - .env
    restart: on-failure
    command: >
      bash -c "celery -A config worker -l info"

  celery-beat:
    build:
      context: .
    tty: true
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - habit
    env_file:
      - .env
    restart: on-failure
    command: >
      bash -c "celery -A config beat -l info"

volumes:
  pg_data: